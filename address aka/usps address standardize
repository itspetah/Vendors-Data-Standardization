import requests
import pandas as pd

# Set up your USPS API username
USERNAME = 'YOUR_USERNAME'  # Replace 'YOUR_USERNAME' with your actual USPS API username

# Function to validate and standardize address using USPS API
def validate_address(address):
    url = f'https://secure.shippingapis.com/ShippingAPI.dll?API=Verify&XML=<AddressValidateRequest USERID="{USERNAME}"><Address ID="0"><Address1></Address1><Address2>{address}</Address2><City></City><State></State><Zip5></Zip5><Zip4></Zip4></Address></AddressValidateRequest>'
    response = requests.get(url)
    if response.status_code == 200:
        xml_response = response.text
        if "<Error>" in xml_response:
            print("Address validation failed for address:", address)
            return None
        else:
            # Parse XML response to extract address components
            address_dict = {}
            address1 = xml_response.split('<Address2>')[-1].split('</Address2>')[0]
            city = xml_response.split('<City>')[-1].split('</City>')[0]
            state = xml_response.split('<State>')[-1].split('</State>')[0]
            zip5 = xml_response.split('<Zip5>')[-1].split('</Zip5>')[0]
            zip4 = xml_response.split('<Zip4>')[-1].split('</Zip4>')[0]
            address_dict['Address'] = address1
            address_dict['City'] = city
            address_dict['State'] = state
            address_dict['Zip5'] = zip5
            address_dict['Zip4'] = zip4
            return address_dict
    else:
        print("Failed to connect to USPS API.")
        return None

# Read Excel file containing addresses
excel_file_path = 'addresses.xlsx'  # Update with your file path
df = pd.read_excel(excel_file_path)

# Validate and standardize addresses
address_components_list = []
for index, row in df.iterrows():
    address = row['Address']
    address_components = validate_address(address)
    if address_components:
        address_components_list.append(address_components)

# Create DataFrame from the extracted components
address_components_df = pd.DataFrame(address_components_list)

# Concatenate with original DataFrame
df_with_components = pd.concat([df, address_components_df], axis=1)

# Save the DataFrame to a new Excel file
output_excel_path = 'addresses_with_components.xlsx'
df_with_components.to_excel(output_excel_path, index=False)
print("Address components extracted and saved to:", output_excel_path)
